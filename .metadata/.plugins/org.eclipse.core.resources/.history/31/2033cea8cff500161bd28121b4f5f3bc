  
/**    
* 文件名：JProxyManager.java    
*    
* 版本信息：    
* 日期：2017年1月23日    
* Copyright 足下 Corporation 2017     
* 版权所有    
*    
*/  

package ProxyManager;


import javax.swing.JPanel;
import javax.swing.JTabbedPane;

import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.text.SimpleDateFormat;

import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import AppConfig.ManagerGlobalConfig;
import JJYComponent.JJYTableCell;
import ProcessMessage.InnerMessage;
import SeverManager.ServerManager;


import javax.swing.JScrollPane;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;

/**    
*     
* 项目名称：ProxyManager    
* 类名称：JProxyManager    
* 类描述：    服务信息界面
* 创建人：jinyu    
* 创建时间：2017年1月23日 上午1:41:48    
* 修改人：jinyu    
* 修改时间：2017年1月23日 上午1:41:48    
* 修改备注：    
* @version     
*     
*/
public class JProxyManager extends JPanel {
	/**   
	* @Title: JProxyManager.java 
	* @Package ProxyManager 
	* @Description: TODO(用一句话描述该文件做什么) 
	* @author fsjohnhuang
	* @date 2017年1月24日 上午12:37:21 
	* @version V1.0   
	*/
	ServerManager manager=new ServerManager();
	private static final long serialVersionUID = 1L;
	private JTable tb_server;
	private JTable tb_log;
    private DefaultTableModel datamodel=new DefaultTableModel();
    private JTabbedPane tabbedPane;
	/**
	 * Create the panel.
	 */
	public JProxyManager() {
		addComponentListener(new ComponentAdapter() {
			@Override
			public void componentShown(ComponentEvent arg0) {
				ServerManager manager=new ServerManager();
				manager.InitServiceRec("*", 3333, "TCP");
				manager.InitClientRequest("*", 3334, "TCP");
				//
				InnerMessage.getInstance().PostMessage(this, "AddUILog", "监视服务成功!");
			}
		});
		setLayout(new GridLayout(0,1,0,0));
		//setLayout(new  BorderLayout(0, 0));
		String[] headers = {"sid", "名称", "IP", "端口","状态","是否是主从服务","启用"};
		Object[][] cellData = null;
		DefaultTableModel modelserver = new DefaultTableModel(cellData, headers);
		//
		String[] logheadrs = { "日志时间", "日志内容", "日志备注" };
		Object[][] logdata = null;
		DefaultTableModel modellog = new DefaultTableModel(logdata, logheadrs);
		//
		tabbedPane = new JTabbedPane(JTabbedPane.TOP);
		add(tabbedPane);
		//tabbedPane.setLayout(new GridLayout(0,1,0,0));
		JPanel pl_server = new JPanel();
		//pl_server.setLayout(new GridLayout(0,1,0,0));
		//new BorderLayout(0, 0)
		pl_server.setLayout( new BorderLayout(0, 0));
		tabbedPane.addTab("服务信息", null, pl_server, null);
		
		JScrollPane srol_server = new JScrollPane();
		srol_server.setEnabled(false);
		pl_server.add(srol_server);
		
		tb_server = new JTable(modelserver);
		srol_server.setViewportView(tb_server);
		
		JPanel pl_log = new JPanel();
		pl_log.setLayout( new BorderLayout(0, 0));
		tabbedPane.addTab("日志信息", null, pl_log, null);
		
		JScrollPane srol_log = new JScrollPane();
		pl_log.add(srol_log);
		
		tb_log = new JTable(modellog);
		srol_log.setViewportView(tb_log);
		//
		ListenMessage listen=new ListenMessage();
		listen.objui=this;
		InnerMessage.getInstance().Listen("AddServer", listen);
		InnerMessage.getInstance().Listen("AddUILog", listen);
		//
		manager.InitServiceRec(ManagerGlobalConfig.ManagerServerAddress, ManagerGlobalConfig.ServerPort, "TCP");
		manager.InitClientRequest(ManagerGlobalConfig.ManagerAddress, ManagerGlobalConfig.ReqPort, "TCP");
		manager.InitHeartBeat(ManagerGlobalConfig.ManagerHeart, ManagerGlobalConfig.beatPort, "UDP");
		manager.InitRecWallSucess(ManagerGlobalConfig.ManagerWall, ManagerGlobalConfig.wallPort, "UDP");
		manager.InitRecTCPBeat(ManagerGlobalConfig.ManagerTCPNat, ManagerGlobalConfig.tcpNatPort, "TCP");
		//
		InnerMessage.getInstance().PostMessage(this, "AddUILog", "监视服务成功!");
		tb_server.getColumnModel().getColumn(6).setCellRenderer(new JJYTableCell());
		//tb_server.getColumnModel().getColumn(5).setCellEditor(new DefaultCellEditor(new JCheckBox()));
	}
	public void AddServerInfo(ServerModel model)
	{
		Object[]rowData=new Object[]{model.sid,model.name,model.IP,String.valueOf(model.port),model.status,model.master,model.isUsing};
		datamodel=(DefaultTableModel) tb_server.getModel();
		if(datamodel.getRowCount()>50)
		{
			datamodel.setRowCount(0);
		}
	for(int i=0;i<datamodel.getRowCount();i++)
	{
		if(datamodel.getValueAt(i, 0).equals(model.sid))
		{
			datamodel.removeRow(i);
			datamodel.insertRow(i, rowData);
		}
	}
		
		datamodel.addRow(rowData);
		//tb_server.getModel().
	}
	public void AddLog(LogInfos log)
	{
		String[]rowData=new String[]{new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(log.logtime),log.logcontent,log.level};
		datamodel=(DefaultTableModel) tb_log.getModel();
		if(datamodel.getRowCount()>50)
		{
			datamodel.setRowCount(0);
		}
		datamodel.addRow(rowData);
	}

}
