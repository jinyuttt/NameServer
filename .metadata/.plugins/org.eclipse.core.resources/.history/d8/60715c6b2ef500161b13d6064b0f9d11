package ServerRecInfo;

import DDS_Transfer.IDDS_Protocol;
import ProtocolsManager.ProtocolManager;
import ProxyExchange.IDataCallBack;
import ProxyExchange.MulticastRec;

import PublicModel.ServerBinds;
import Tools.MsgPackTool;
import nameServerContainer.ManagerConfig;


public class  ServerInfo {
	IDataCallBack  sinfo=new RecServerInfo();

  /**
 *  接收服务端信息发送
 */
public void AddServer()
  {
	//初始化接收服务端的服务信息，监听223端口
	MulticastRec  rec=new MulticastRec();
	rec.port=223;
	
	rec.Start(sinfo);
  }
/**
 * 
* @Name: SendInfo 
* @Description: 将添加的服务地址发送出去注册
* @param info 服务信息
* @param addr  发送的地址
* @param port  发送的端口 
* @return void    返回类型 
* @throws
 */
public void SendInfo(ServerBinds info)
  {
	  StringBuilder error=new StringBuilder();
	  byte[]data=null;
	  MsgPackTool tool=new MsgPackTool();
 	  data=tool.Serialize(info, error);
 	   Boolean value=  ManagerConfig.hashConfig.getOrDefault(info.name, null);
		if(value==null)
		{
			value=ManagerConfig.IsManager;
		}
	 if(value)
	 {
		 try {
			 IDDS_Protocol protocols=(IDDS_Protocol)ProtocolManager.getInstance().CreateObject(ManagerConfig.Communication_Type);
			 protocols.CreateClient();
			 protocols.Connect(ManagerConfig.ManagerAddr, ManagerConfig.ManagerPort);
			 protocols.ClientSocketSend(data);
			byte[]managerbytes= protocols.RecClientSocket();
			String managerinfo=new String(managerbytes);
		 
		 } catch (InstantiationException e) {
			
			e.printStackTrace();
		} catch (IllegalAccessException e) {
			
			e.printStackTrace();
		}
	 }
  }
}
